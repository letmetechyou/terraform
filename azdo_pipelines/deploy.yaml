parameters:
    - name: workingDirectory
      type: string
    - name: deployEnvs
      type: object
      default: {}
    - name: pool
      type: object
      default: {}
    # - name: region
    #   type: object
    #   default: {}
    # - name: location
    #   type: string
    - name: destroy
      type: boolean
      default: false
    - name: platform
      type: string
    - name: purpose
      type: string
    - name: terraformModuleVersion
      type: string
      default: ""
    # - name: terraformBackend
    #   type: object
    #   default: {}

stages:
    - stage: Build
      jobs:
          - job: artifact
            displayName: Create Artifact
            pool:
                name: ${{ parameters.pool }}
            variables:
                - name: gitTag
                  value: "refs/tags/${{ parameters.terraformModuleVersion }}"
            steps:
                - checkout: self
                  displayName: 'Checkout Repository'
                  clean: false
                  path: s/src
                - checkout: git://reponame@${{ variables.gitTag }}
                  displayName: "Checkout Terraform Modules"
                  path: s/modules
                - task: CopyFiles@2
                  displayName: 'Copy working directory Files to: $(build.artifactstagingdirectory)/Terraform'
                  inputs:
                    SourceFolder: '$(Pipeline.Workspace)/s/src/${{ parameters.workingDirectory }}'
                    Contents: '**'
                    TargetFolder: $(build.artifactstagingdirectory)/Terraform
                    CleanTargetFolder: true
                - task: CopyFiles@2
                  displayName: 'Copy module directory Files to: $(build.artifactstagingdirectory)/Terraform'
                  inputs:
                    SourceFolder: '$(Pipeline.Workspace)/s/modules/Modules'
                    Contents: '**'
                    TargetFolder: $(build.artifactstagingdirectory)/Terraform/Modules
                    CleanTargetFolder: false
                - task: PublishBuildArtifacts@1
                  displayName: 'Publish Artifact: drop'

#loop through each environment
    - ${{ each env in parameters.deployEnvs }}:
    #check if the environement is enabled (default to true)
      - ${{ if ne(coalesce(env.value.enabled, true), false)}}:
      #then loop through each region
        - ${{ each region in env.value }}:
        #check if region is enabled (default to true)
          - ${{ if ne(coalesce(region.value.enabled, true), false) }}:
            - stage: deploy${{ env.key }}${{ region.key }}
              displayName: deploy ${{ env.key }} - ${{ region.key}}
              condition: succeeded()
              jobs:
                  - template: steps.yaml
                    parameters:
                        pool: ${{ parameters.pool }}
                        # region: ${{ region.key }}
                        terraformBackend: ${{ region.value }}
                        platform: ${{ parameters.platform }}
                        purpose: ${{ parameters.purpose }}
                        environment: "${{ env.key }}"
                        regionKey: "${{ region.key }}"
                        workingDirectory: ${{ parameters.workingDirectory }}
                        destroy: ${{ parameters.destroy }}
